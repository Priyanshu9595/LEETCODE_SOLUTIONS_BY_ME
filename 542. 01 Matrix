class Solution {
public:
     vector<vector<int>>dir={{0,1},{0,-1},{1,0},{-1,0}};

    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        
        int n=mat.size();
        int m=mat[0].size();

        queue<pair<int,int>>q;
                  vector<vector<int>>vis(n,vector<int>(m,-1));


        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]==0){
                    q.push({i,j});
                vis[i][j]=1;
            }
            }
        }

          int ans=0;


        while(!q.empty()){

            int s=q.size();
            ans++;

            while(s--){
            auto x=q.front();
            int i=x.first;
            int j=x.second;

            q.pop();

          



            for(auto d:dir){
                int i_=i+d[0];
                int j_=j+d[1];

                if(i_>=0 && j_>=0 && i_<n && j_<m && vis[i_][j_]==-1 && mat[i_][j_]==1){
                    q.push({i_,j_});
                    vis[i_][j_]=1;

                    mat[i_][j_]=ans;
                }
            }
        }

        }
    return mat;



    }
};
