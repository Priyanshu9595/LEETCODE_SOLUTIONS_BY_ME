class Solution {
public:
           int n;
           int charge;
     int solve(int i,int b,vector<int>&prices,vector<vector<int>>&dp){
        if(i>=n)return 0;


        if(dp[i][b]!=-1)return dp[i][b];

        int buy=0;
        int sell=0;


        if(b==1){
                     buy=-charge-prices[i]+solve(i+1,0,prices,dp);
                     sell=solve(i+1,1,prices,dp);
        }else{
             buy=prices[i]+solve(i+1,1,prices,dp);
                     sell=solve(i+1,0,prices,dp);
        }

        return dp[i][b]=max(buy,sell);

     }

    int maxProfit(vector<int>& prices,int fee) {
      charge=fee;
        n=prices.size();


        vector<vector<int>>dp(n+1,vector<int>(2,-1));

        return solve(0,1,prices,dp);
        
    }
};
