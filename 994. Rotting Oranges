class Solution {
public:

vector<vector<int>>dir={{0,1},{0,-1},{1,0},{-1,0}};
    int orangesRotting(vector<vector<int>>& grid) {

        int n=grid.size();
        int m=grid[0].size();

        queue<pair<int,int>>q;

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==2)q.push({i,j});
            }
        }

        int ans=0;

        while(!q.empty()){

            int s=q.size();
            ans++;

            while(s--){
            auto x=q.front();
            int i=x.first;
            int j=x.second;

            q.pop();

          



            for(auto d:dir){
                int i_=i+d[0];
                int j_=j+d[1];

                if(i_>=0 && j_>=0 && i_<n && j_<m && grid[i_][j_]==1){
                    q.push({i_,j_});

                    grid[i_][j_]=2;
                }
            }
        }

        }

        bool check=true;

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1)check=false;
            }
        }

        if(check==false)return -1;


         
        return max(0,ans-1);


        
    }
};
