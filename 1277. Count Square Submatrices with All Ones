class Solution {
public:
     int n,m;
     int solve(int i,int j,vector<vector<int>>&dp,vector<vector<int>>&matrix){
        if(i>=n || j>=m || i<0 || j<0)return 0;

        if(matrix[i][j]==0)return 0;

        if(dp[i][j]!=-1)return dp[i][j];

        int left=solve(i,j+1,dp,matrix);
        int down=solve(i+1,j,dp,matrix);
        int dia=solve(i+1,j+1,dp,matrix);


        dp[i][j]=1+min({left,down,dia});

        return dp[i][j];
     }


    int countSquares(vector<vector<int>>& matrix) {

    n=matrix.size();
    m=matrix[0].size();

        vector<vector<int>>dp(n+1,vector<int>(m+1,-1));

        int ans=0;

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                ans+=solve(i,j,dp,matrix);
            }
        }
        return ans;
    }
};
